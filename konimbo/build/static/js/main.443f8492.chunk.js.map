{"version":3,"sources":["Components/ProductPage/ProductPage.js","Components/ProductCard/ProductCard.js","Components/SearchBar/SearchBar.js","Components/ProductsBoard/ProductsBoard.js","Components/Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["ProductPage","title","price","images","handleClose","i","useState","url","mainImage","setMainImage","slice","galleryImages","priceNoDot","parseInt","className","onClick","id","src","alt","map","image","key","ProductCard","props","store_category_title","showProductPage","setShowProductPage","newPrice","category","SearchBar","debounceSearch","func","wait","timeout","context","this","args","arguments","later","apply","clearTimeout","setTimeout","debounce","onSearch","placeholder","type","onChange","e","target","value","ProductsBoard","ind","setInd","products","setProducts","setSearchRegex","searchedProducts","setSearchedProducts","displayedProducts","setDisplayedProducts","useEffect","getProducts","then","data","console","log","a","fetch","response","json","regex","regex_input","RegExp","searchResult","filter","test","length","product","newIndex","Header","prevScrollpos","window","pageYOffset","onscroll","currentScrollPos","document","getElementById","style","top","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.443f8492.chunk.js","sourcesContent":["import React, {useState} from \"react\";\n\nconst ProductPage = ({title, price, images, handleClose}) => {\n\n    let i = 0;\n    const [mainImage, setMainImage] = useState(images[0]?.url);\n    const [galleryImages, setGalleryImages] = useState(images.slice(0, 9))\n\n    const priceNoDot = parseInt(price);\n    return (\n        <div className='black-layout'>\n            <div className='product-page'>\n                <button className='close-page' onClick={handleClose}>X</button>\n                <h1>{title}</h1>\n                <img id='main-image' src={mainImage} alt=''/>\n                <div className='gallery'>\n                    {galleryImages.map((image) => (\n                        <img className='gallery-pic'\n                             src={image?.url}\n                             alt=''\n                             onClick={() => setMainImage(image?.url)}\n                             key={i++}\n                        />))\n                    }\n                </div>\n\n                <div className='product-details'>\n                    <h2>Price : {priceNoDot} </h2>\n                </div>\n\n                <div className='product-buttons'>\n                <button className='order-button'>Order Now!</button>\n                <button className='addToCart-button'>Add to cart</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ProductPage;","import React, {useState} from \"react\";\nimport ProductPage from \"../ProductPage/ProductPage\";\n\nconst ProductCard = (props) => {\n    const {title, mainImage, price, images, store_category_title} = props;\n    const [showProductPage, setShowProductPage] = useState(false);\n\n    let newPrice = parseInt(price);\n    let i = 0;\n\n    const handleClose = () => {\n        setShowProductPage(false);\n    }\n\n    if (showProductPage) {\n        return (\n            <ProductPage\n                handleClose={handleClose}\n                category={store_category_title}\n                images={images}\n                price={price}\n                title={title}\n                key={i++}\n\n            />\n        );\n    }\n\n    return (\n        <div className='product' onClick={() => setShowProductPage(true)}>\n            {showProductPage ?\n                <ProductPage\n                    images={images}\n                    price={price}\n                    title={title}\n                    category={store_category_title}\n                    key={i++}\n                /> : null}\n            <h3>{title}</h3>\n            <p>{`price : ${newPrice}`}</p>\n            <img src={mainImage} alt=\"\"/>\n        </div>\n    );\n};\n\nexport default ProductCard;","import React, {useState} from \"react\";\n\nconst SearchBar = ({onSearch}) => {\n    // const [search, setSearch] = useState('');\n    function debounce(func, wait) {\n        let timeout;\n        return function () {\n            const context = this, args = arguments;\n\n            let later = function () {\n                timeout = null;\n                func.apply(context, args);\n            };\n\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n\n\n        };\n    }\n\n    const debounceSearch = debounce(onSearch, 400);\n\n    return (\n        <div className=\"search-form\">\n            <input\n                placeholder={`What are you looking for?..`}\n                type=\"text\"\n                // value={search}\n                onChange={(e) => {\n                    debounceSearch(e.target.value);\n                }}\n            />\n        </div>\n    );\n};\n\nexport default SearchBar;","import React, {useEffect, useState} from \"react\";\nimport ProductCard from \"../ProductCard/ProductCard\";\nimport SearchBar from \"../SearchBar/SearchBar\";\n\nconst ProductsBoard = () => {\n\n    const [ind, setInd] = useState(0);\n    const [products, setProducts] = useState([]);\n    const [searchRegex, setSearchRegex] = useState('');\n    const [searchedProducts, setSearchedProducts] = useState([]);\n    const [displayedProducts, setDisplayedProducts] = useState([]);\n\n\n    let key = 0;\n\n    useEffect(() => {\n        try {\n            getProducts().then(data => {\n                setProducts(data);\n                setDisplayedProducts(data.slice(ind, ind + 12));\n\n            });\n        } catch (e) {\n            console.log('err')\n        }\n    }, []);\n\n    const getProducts = async () => {\n        const url = 'https://api.konimbo.co.il/v1/items?token=9c1a92bf8cefc59e4ec9fa7c53bba0f90dd8b15850bef1062dbf32c5e8fd3a08';\n        const response = await fetch(url);\n        return await response.json();\n    };\n\n    const handleSearch = (regex) => {\n        if (regex === '') {\n            setSearchedProducts([]);\n        } else {\n            setSearchRegex(regex);\n            console.log(`regex : ${regex}`);\n            const regex_input = new RegExp(regex, 'ig');\n            const searchResult = products.filter(({title, store_category_title}) => regex_input.test(title) || regex_input.test(store_category_title));\n            setSearchedProducts(searchResult);\n        }\n    }\n\n    const prevProducts = () => {\n        const newIndex = ind - 12;\n        setDisplayedProducts(products.slice(newIndex, newIndex + 12));\n        setInd(newIndex);\n    }\n    const nextProducts = () => {\n        const newIndex = ind + 12;\n        setDisplayedProducts(products.slice(newIndex, newIndex + 12))\n        setInd(newIndex);\n    }\n\n    return (\n        <div>\n            <SearchBar onSearch={handleSearch}/>\n\n            <div className='products-container'>\n                {\n                    searchedProducts.length === 0\n                    ?\n                    displayedProducts.map(product => (\n                        <ProductCard\n                            title={product?.title}\n                            price={product?.price}\n                            images={product?.images}\n                            mainImage={product?.images[0]?.url}\n                            key={key++}\n                        />\n                    ))\n                    :\n                    searchedProducts.map(product => (\n                        <ProductCard\n                            title={product?.title}\n                            price={product?.price}\n                            images={product?.images}\n                            mainImage={product?.images[0]?.url}\n                            key={key++}\n                        />))}\n            </div>\n\n\n            < div className='nav-buttons'>\n                <button className='move-page' onClick={prevProducts}>Back</button>\n                <button className='move-page' onClick={nextProducts}>Next</button>\n            </div>\n        </div>\n    );\n}\n\nexport default ProductsBoard;","import React from \"react\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nconst Header = () => {\n    var prevScrollpos = window.pageYOffset;\n    window.onscroll = function() {\n        var currentScrollPos = window.pageYOffset;\n        if (prevScrollpos > currentScrollPos) {\n            document.getElementById(\"fixed-header\").style.top = \"0\";\n        } else {\n            document.getElementById(\"fixed-header\").style.top = \"-180px\";\n        }\n        prevScrollpos = currentScrollPos;\n    }\n\n    return (\n        <div id=\"fixed-header\">\n            <h1 id='title'>Konimbo!</h1>\n        </div>\n    );\n}\n\nexport default Header;","import React from 'react';\nimport './style/main.css'\nimport ProductsBoard from \"./Components/ProductsBoard/ProductsBoard\";\nimport Header from \"./Components/Header/Header\";\n\nfunction App() {\n    return (\n        <div className='App'>\n            <Header/>\n            <ProductsBoard/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}